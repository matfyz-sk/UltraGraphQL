buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        jcenter()
    }

    dependencies {
        classpath 'com.github.johnrengelman:shadow:8.1.1'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'org.hypergraphql'
version = '1.4.11'

sourceCompatibility = 17
targetCompatibility = 17



repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    jenaVersion = '4.2.0'
    cxfVersion = "3.5.5"
    cxfArtifacts = [
            'cxf-rt-frontend-jaxrs',
            'cxf-rt-transports-http',
            'cxf-rt-transports-http-jetty',
    ]
}
dependencies {

    /* The transactions libraries are not officially release and must be downloaded from the virtuoso webpage
    and placed into the project  */
    implementation files('lib/virtjdbc4_3.jar')
    implementation files('lib/virt_jena4.jar')

    implementation 'com.graphql-java:graphql-java:20.2'
    implementation 'com.graphql-java:graphql-java-extended-scalars:20.2'

    implementation "org.apache.jena:jena-arq:$jenaVersion"
    implementation "org.apache.jena:jena:$jenaVersion"
    implementation "org.apache.jena:jena-core:$jenaVersion"
    implementation "org.apache.jena:jena-fuseki-main:$jenaVersion"
    implementation "org.apache.jena:jena-querybuilder:$jenaVersion"

    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.slf4j:slf4j-reload4j:2.0.7'

    implementation 'com.sparkjava:spark-core:2.9.4'
    implementation 'com.sparkjava:spark-template-velocity:2.7.1'

    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    cxfArtifacts.each { artifact ->
        implementation "org.apache.cxf:$artifact:$cxfVersion"
    }
    implementation "org.apache.httpcomponents:httpclient:4.5.14"

    implementation "com.mashape.unirest:unirest-java:1.4.9"
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.445'

    testImplementation "org.mockito:mockito-core:5.3.0"

    testImplementation "org.junit.platform:junit-platform-gradle-plugin:1.2.0"

    testCompileOnly('org.apiguardian:apiguardian-api:1.1.2')

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.9.2'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    )
}

test {
    systemProperty 'hgql_version', project.version
//    useJUnitPlatform()   // MUST be commented out to build because unit tests of hgql do not succeed (problem exists also in HGQL 1.0.3)
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

tasks.register('execute', JavaExec) {
    systemProperty('hgql_version', project.version)
    mainClass = 'org.hypergraphql.Application'
    classpath = sourceSets.main.runtimeClasspath

    if (project.hasProperty('a')) {
        args(a.split(',' as Closure))
    }
}

sourceSets {
    main {
        resources {
            include '**/*.json', '**/*.xml', '**/*.vtl', '**/*.properties', '**/*.txt', '**/*.graphql', '**/*.sparql', '**/*.ttl'
        }
    }
}
import com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer
import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

shadowJar {
    // merge SPI descriptors
    transform(AppendingTransformer) {
        resource='META-INF/cxf/bus-extensions.txt'
    }
    transform(XmlAppendingTransformer) {
        resource = 'META-INF/cxf/cxf-extension-http-jetty.xml'
    }
    transform(XmlAppendingTransformer) {
        resource = 'META-INF/cxf/cxf-extension-http.xml'
    }
    transform(XmlAppendingTransformer) {
        resource = 'META-INF/cxf/cxf-servlet.xml'
    }
    transform(XmlAppendingTransformer) {
        resource = 'META-INF/cxf/cxf.xml'
    }
    transform(XmlAppendingTransformer) {
        resource = 'META-INF/cxf/cxf-extension-xml.xml'
    }

    zip64 = true

    exclude  'LICENSE', 'LICENSE/**', 'license', 'license/**'
    archiveClassifier = 'exe'

    manifest {
        attributes 'Class-Path': 'org.apache.cxf.transport.http'
        attributes("Main-Class": "org.hypergraphql.Application")
    }
}
